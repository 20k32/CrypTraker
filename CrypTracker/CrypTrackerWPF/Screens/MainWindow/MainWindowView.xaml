<!-- This window is used to display top N currencies -->

<UserControl x:Class="CrypTrackerWPF.Screens.MainWindow.MainWindowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:locale="clr-namespace:CrypTrackerWPF.Models.LocalizationExtensions"
             xmlns:local="clr-namespace:CrypTrackerWPF.Screens.MainWindow"
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid IsEnabled="{Binding IsUiEnabled}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="6.2*"/>
            <ColumnDefinition Width="3.8*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0"
                    Orientation="Vertical"
                    HorizontalAlignment="Right">
            <Border Style="{StaticResource TextBoxBorder}"
                    Margin="10"
                    HorizontalAlignment="Center">
                <StackPanel Orientation="Horizontal">
                    <TextBox
                        Text="{Binding SearchOptions, 
                             Mode=TwoWay, 
                             UpdateSourceTrigger=PropertyChanged,
                             Delay=1000}"
                        Width="200" />
                    <Button x:Name="Reset"
                            Style="{StaticResource TextBoxButton}"
                            Content="{locale:LocalizationBinding {x:Static locale:Replicas.ResetButtonName}}" />
                </StackPanel>
            </Border>
            <TextBlock TextAlignment="Center"
                       Text="{locale:LocalizationBinding {x:Static locale:Replicas.DisplayTop}}"
                       Margin="0, 0, 5, 0" />
            <DataGrid ItemsSource="{Binding Items}"
                      SelectedItem="{Binding SelectedCoin}"
                      SelectionMode="Single"
                      IsReadOnly="True"
                      AutoGenerateColumns="False"
                      HorizontalContentAlignment="Center"
                      HorizontalAlignment="Center"
                      Height="531"
                      EnableColumnVirtualization="True"
                      EnableRowVirtualization="True"
                      cal:Message.Attach="[Event PreviewMouseRightButtonUp] = [Action PreviewMouseRightButtonUp($eventArgs)]">
                <DataGrid.Resources>
                    <ContextMenu x:Key="CellMenu">
                        <MenuItem Header="Add"
                                  Command="{Binding DataContext.AddCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                        <MenuItem Header="Remove"
                                  Command="{Binding DataContext.RemoveCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                    </ContextMenu>
                </DataGrid.Resources>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="ContextMenu" Value="{StaticResource CellMenu}" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Header="{locale:LocalizationBinding {x:Static locale:Replicas.Name}}"
                        Binding="{Binding Name, Mode=OneTime}"
                        Width="SizeToCells"
                        MinWidth="300" />
                    <DataGridTextColumn
                        Header="{locale:LocalizationBinding {x:Static locale:Replicas.ShortName}}"
                        Binding="{Binding ShortName, Mode=OneTime}"
                        Width="SizeToHeader" />
                    <DataGridTextColumn
                        Header="{locale:LocalizationBinding {x:Static locale:Replicas.Price}}"
                        Binding="{Binding Price, Mode=OneTime,
                                        Converter={StaticResource CurrencyConverter}}"
                        Width="SizeToCells" />
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Orientation="Vertical"
                        Margin="0, 10, 0, 0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button x:Name="PreviousPage"
                            Grid.Column="0"
                            Content="{locale:LocalizationBinding {x:Static locale:Replicas.PreviousPage}}"
                            MinWidth="150" />
                    <Button x:Name="NextPage"
                            Grid.Column="2"
                            Content="{locale:LocalizationBinding {x:Static locale:Replicas.NextPage}}"
                            MinWidth="150" />
                </Grid>
            </StackPanel>
        </StackPanel>
        <GroupBox Grid.Column="1"
                  HorizontalContentAlignment="Center"
                  VerticalContentAlignment="Center"
                  Header="You're about exchange currency."
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Margin="10, 0, 0, 0"
                  Visibility="{Binding IsGroupPanelVisible, Converter={StaticResource VisibilityConverter}}">
            <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding ExchangeUnit.BuyCurrency.IsFilled, Converter={StaticResource VisibilityConverter}}">
                    <TextBlock Text="Buy:" Margin="0, 0, 5, 0"/>
                    <TextBlock Text="{Binding ExchangeUnit.BuyCurrency.AssetName}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding ExchangeUnit.SellCurrency.IsFilled, Converter={StaticResource VisibilityConverter}}">
                    <TextBlock Text="Sell:" Margin="0, 0, 5, 0"/>
                    <TextBlock Text="{Binding ExchangeUnit.SellCurrency.AssetName, Delay=500}" />
                </StackPanel>
                <Button x:Name="OpenExchangeTab"
                        Content="Exchange is ready, click here or go on tab"
                        IsEnabled="{Binding IsExchangeLoaded}"/>
            </StackPanel>
        </GroupBox>
    </Grid>
</UserControl>